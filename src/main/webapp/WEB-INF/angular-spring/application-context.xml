<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
   		http://www.springframework.org/schema/security/spring-security-3.2.xsd
   		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- enabling annotation driven configuration / -->
	<context:annotation-config />
	
	<mvc:annotation-driven />


	<!-- ############################# DATA SOURCE AND TRANSACTION MANAGEMENT ############################# -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:jpaVendorAdapter-ref="jpaAdapter">
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="persistenceUnitName" value="ANGULAR_SPRING"></property>
	</bean>

	<bean id="jpaAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database="${jpa.database}" p:showSql="${jpa.showSql}" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />
	
	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="findAll*" read-only="true"/>            
            <!-- other methods use the default transaction settings (see below) -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
	
	 <!-- ensure that the above transactional advice runs for any execution of an operation defined by the FooService interface -->
    <aop:config>
        <aop:pointcut id="serviceLayerMethods" expression="execution(* com.gymadmin.services.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceLayerMethods"/>
    </aop:config>
    
   	<tx:annotation-driven transaction-manager="transactionManager" />
    
    <!-- ############################# DATA SOURCE AND TRANSACTION MANAGEMENT ############################# -->
    
    <!-- ############################# COMPONENT SCAN ############################# -->
    
    <!-- APP CONFIGURATION -->
    <context:component-scan	base-package="com.gymadmin.config" />
    
    <!-- DAOS -->
	<context:component-scan	base-package="com.gymadmin.persistence.dao.impl" />
	
	<!-- SERVICES -->
	<context:component-scan	base-package="com.gymadmin.services.impl" />	
	
	<!-- ############################# COMPONENT SCAN ############################# -->	

</beans>